name: Deploy to NPM

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
      - name: Create empty .env file
        run: touch .env
      - run: npm test
      - run: npm run build
      - name: Publish to NPM
        run: |
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc

          # Read version from package.json
          VERSION=$(node -p "require('./package.json').version")
          echo "Current package version: $VERSION"

          # Check if version contains prerelease marker (e.g., -rc, -beta, -alpha)
          if [[ $VERSION == *"-"* ]]; then
            # Extract prerelease tag (e.g., extract 'rc' from '1.0.0-rc.1')
            PRERELEASE_TAG=$(echo $VERSION | sed -E 's/[0-9]+\.[0-9]+\.[0-9]+-([a-zA-Z]+).*/\1/')
            echo "Detected prerelease version with tag: $PRERELEASE_TAG"

            # Publish with the extracted tag
            npm publish --tag $PRERELEASE_TAG

            echo "Published with tag: $PRERELEASE_TAG"
          else
            # Regular version, publish with default tag (latest)
            npm publish

            echo "Published as latest version"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
